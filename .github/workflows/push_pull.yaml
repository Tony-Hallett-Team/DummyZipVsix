name: Push vsix artifact pull release and comment
on: 
    push:
    pull_request:
        types: [opened, synchronize, edited]
    
jobs:
  push-vsix-artifact-pull-release-and-comment:
    name: Push vsix artifact pull release and comment
    runs-on: windows-2019
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
            fetch-depth: 0
      - name: Determine next version 
        id: next-version
        uses: paulhatch/semantic-version@v4.0.1
        with:
            short_tags: false
            branch: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || 'HEAD' }}
      
      - name: set up msbuild
        uses: microsoft/setup-msbuild@v1.0.2

      - name: set up VSTest
        uses: darenm/Setup-VSTest@v1

      - name: nuget restore
        run: nuget restore DummyZipVsix.sln

      - name: Set version for Visual Studio Extension
        uses: cezarypiatek/VsixVersionAction@1.0
        with:
            version: ${{steps.next-version.outputs.major}}.${{steps.next-version.outputs.minor}}.${{github.run_number}}.${{steps.next-version.outputs.patch}}  
            vsix-manifest-file: ${{github.workspace}}\DummyZipVsix\source.extension.vsixmanifest

      - name: build vsix
        run: |
          msbuild DummyZipVsix.sln /p:Configuration=Release /p:DeployExtension=False /verbosity:minimal 

      - name: vs test solution
        uses: tonyhallett/vstest-solution-action@v1.0.0

        # above are common steps for push and pull

        # pull only
      - name: upload vsix
        if: github.event_name == 'pull_request' && !github.event.pull_request.draft
        uses: actions/upload-artifact@v2
        with:
            name: DummyZip ( zipped vsix)
            path: ${{github.workspace}}\DummyZipVsix\bin\Release\DummyZipVsix.vsix

        # push only
      - name: create release
        if: github.event_name == 'push'
        id: create_release
        uses: actions/create-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            tag_name: ${{steps.next-version.outputs.version_tag}} 
            release_name:  ${{steps.next-version.outputs.version_tag}}
            draft: false
            prerelease: falses
      - name: Update release asset
        if: github.event_name == 'push'
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{steps.create_release.outputs.upload_url}}
            asset_path: ${{github.workspace}}\DummyZipVsix\bin\Release\DummyZipVsix.vsix # todo create var
            asset_name: DummyZipVsix.vsix # will use a var
            asset_content_type: application/zip
      - name: add to marketplace
        if: github.event_name == 'push'
        uses: mrluje/vs-marketplace-publisher@v2
        with:
          pat: ${{ secrets.VSIX_PUBLISHER }} 
          manifestPath: ${{github.workspace}}\DummyZipVsix\publishManifest.json # will be made relative if does not exist
          vsixPath: ${{github.workspace}}\DummyZipVsix\bin\Release\DummyZipVsix.vsix   #  will be creating a var
            
      - name: comment - released and added to marketplace
        if: github.event_name == 'push'
        uses: tonyhallett/addCommentToPullAndIssuesFromPushAction@v1.0.0
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            comment: released ${{steps.next-version.outputs.version_tag}} and available on marketplace
            addTo: pullandissues
